2009-11-10, 16:53

Test-driven, "clean code" pure scala implementation of the OAuth standard.

-------------------------------------------------------------------------------------
Example: How to sign a URI with Consumer
-------------------------------------------------------------------------------------

val uri         = new URI("http://xxx")
val consumer    = new Consumer(new Credential("key", "secret"))
val signedUri   = consumer.sign(uri)

-------------------------------------------------------------------------------------
Example: How to create a signed URI
-------------------------------------------------------------------------------------

val uri         = new URI("http://xxx")
val consumer    = new Credential("key", "secret")
val token       = new Credential("token", "token_secret")
val timestamp   = "1259067839"
val nonce       = "73f0f93345d76d6cd1bab30af14a99e3"

val signedUri = new SignedUri(
    uri,
    new CredentialSet(consumer, token),
    timestamp,
    nonce
)

-------------------------------------------------------------------------------------
Example: How to generate signature base string
-------------------------------------------------------------------------------------
The one from the oauth specification (http://oauth.net/core/1.0a#RFC2617,
Appendix A.5.1.  Generating Signature Base String) is represented as a unit test.

See: org.coriander.unit.tests.oauth.core.SignatureBaseStringTest.
    example_with_token_from_the_oauth_spec_document